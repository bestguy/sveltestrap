{"version":3,"file":"418.9b1eeb04.iframe.bundle.js","mappings":";;;;;AA2FA","sources":["webpack://sveltestrap/./node_modules/@storybook/svelte/templates/PreviewRender.svelte"],"sourcesContent":["/* node_modules/@storybook/svelte/templates/PreviewRender.svelte generated by Svelte v4.2.1 */\nimport {\n\tSvelteComponent,\n\tcreate_component,\n\tdestroy_component,\n\tinit,\n\tmount_component,\n\tsafe_not_equal,\n\ttransition_in,\n\ttransition_out\n} from \"svelte/internal\";\n\nimport \"svelte/internal/disclose-version\";\nimport SlotDecorator from './SlotDecorator.svelte';\nimport { dedent } from 'ts-dedent';\n\nfunction create_fragment(ctx) {\n\tlet slotdecorator;\n\tlet current;\n\n\tslotdecorator = new SlotDecorator({\n\t\t\tprops: {\n\t\t\t\tComponent: /*Component*/ ctx[0],\n\t\t\t\tprops: /*props*/ ctx[1],\n\t\t\t\ton: {\n\t\t\t\t\t.../*eventsFromArgTypes*/ ctx[3],\n\t\t\t\t\t.../*on*/ ctx[2]\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(slotdecorator.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(slotdecorator, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tconst slotdecorator_changes = {};\n\t\t\tif (dirty & /*Component*/ 1) slotdecorator_changes.Component = /*Component*/ ctx[0];\n\t\t\tif (dirty & /*props*/ 2) slotdecorator_changes.props = /*props*/ ctx[1];\n\n\t\t\tif (dirty & /*on*/ 4) slotdecorator_changes.on = {\n\t\t\t\t.../*eventsFromArgTypes*/ ctx[3],\n\t\t\t\t.../*on*/ ctx[2]\n\t\t\t};\n\n\t\t\tslotdecorator.$set(slotdecorator_changes);\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(slotdecorator.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(slotdecorator.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(slotdecorator, detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { name } = $$props;\n\tlet { kind } = $$props;\n\tlet { storyFn } = $$props;\n\tlet { showError } = $$props;\n\tlet { storyContext } = $$props;\n\n\tlet { /** @type {SvelteComponent} */\n\tComponent, /** @type {any} */\n\tprops = {}, /** @type {{[string]: () => {}}} Attach svelte event handlers */\n\ton } = storyFn();\n\n\tconst eventsFromArgTypes = Object.fromEntries(Object.entries(storyContext.argTypes).filter(([k, v]) => v.action && props[k] != null).map(([k, v]) => [v.action, props[k]]));\n\n\tif (!Component) {\n\t\tshowError({\n\t\t\ttitle: `Expecting a Svelte component from the story: \"${name}\" of \"${kind}\".`,\n\t\t\tdescription: dedent`\n        Did you forget to return the Svelte component configuration from the story?\n        Use \"() => ({ Component: YourComponent, props: {} })\"\n        when defining the story.\n      `\n\t\t});\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('name' in $$props) $$invalidate(4, name = $$props.name);\n\t\tif ('kind' in $$props) $$invalidate(5, kind = $$props.kind);\n\t\tif ('storyFn' in $$props) $$invalidate(6, storyFn = $$props.storyFn);\n\t\tif ('showError' in $$props) $$invalidate(7, showError = $$props.showError);\n\t\tif ('storyContext' in $$props) $$invalidate(8, storyContext = $$props.storyContext);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*storyFn*/ 64) {\n\t\t\t// reactive, re-render on storyFn change\n\t\t\t$: $$invalidate(0, { Component, props = {}, on } = storyFn(), Component, ($$invalidate(1, props), $$invalidate(6, storyFn)), ($$invalidate(2, on), $$invalidate(6, storyFn)));\n\t\t}\n\t};\n\n\treturn [\n\t\tComponent,\n\t\tprops,\n\t\ton,\n\t\teventsFromArgTypes,\n\t\tname,\n\t\tkind,\n\t\tstoryFn,\n\t\tshowError,\n\t\tstoryContext\n\t];\n}\n\nclass PreviewRender extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, {\n\t\t\tname: 4,\n\t\t\tkind: 5,\n\t\t\tstoryFn: 6,\n\t\t\tshowError: 7,\n\t\t\tstoryContext: 8\n\t\t});\n\t}\n}\n\nexport default PreviewRender;PreviewRender.__docgen = {\"version\":3,\"name\":\"PreviewRender.svelte\",\"data\":[{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"name\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"kind\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"storyFn\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"showError\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}},{\"visibility\":\"public\",\"description\":null,\"keywords\":[],\"name\":\"storyContext\",\"kind\":\"let\",\"static\":false,\"readonly\":false,\"type\":{\"kind\":\"type\",\"text\":\"any\",\"type\":\"any\"}}],\"computed\":[],\"methods\":[],\"components\":[],\"description\":null,\"keywords\":[],\"events\":[],\"slots\":[],\"refs\":[]};"],"names":[],"sourceRoot":""}